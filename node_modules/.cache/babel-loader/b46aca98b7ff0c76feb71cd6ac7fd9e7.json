{"remainingRequest":"/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/babel-loader/lib/index.js!/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/src/views/admin/SurveysList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/src/views/admin/SurveysList.vue","mtime":1655266431667},{"path":"/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/babel.config.js","mtime":1654876133000},{"path":"/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/cache-loader/dist/cjs.js","mtime":1655263279431},{"path":"/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/babel-loader/lib/index.js","mtime":1655263279743},{"path":"/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/cache-loader/dist/cjs.js","mtime":1655263279431},{"path":"/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/vue-loader/lib/index.js","mtime":1655263279849}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL1VzZXJzL2luZ2p1bGlvdmFzcXVlei9Eb2N1bWVudHMvUHJveWVjdG9zL2VuY3Vlc3Rhc19wZXJzb25hbGVzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9yZWdlbmVyYXRvclJ1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2luZ2p1bGlvdmFzcXVlei9Eb2N1bWVudHMvUHJveWVjdG9zL2VuY3Vlc3Rhc19wZXJzb25hbGVzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBjb2xsZWN0aW9uLCBkb2MsIGdldERvY3MsIGRlbGV0ZURvYyB9IGZyb20gImZpcmViYXNlL2ZpcmVzdG9yZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc3VydmV5czogW10KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmdldFN1cnZleXMoKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFN1cnZleXM6IGZ1bmN0aW9uIGdldFN1cnZleXMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGRhdGE7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzMi5zdXJ2ZXlzID0gW107IC8vKiBSZWFkIGRhdGEgdG8gZmlyZWJhc2UKCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0RG9jcyhjb2xsZWN0aW9uKHdpbmRvdy5kYiwgInN1cnZleXMiKSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEuZm9yRWFjaChmdW5jdGlvbiAoc3VydmV5KSB7CiAgICAgICAgICAgICAgICAgIHZhciBzdXJ2ID0gewogICAgICAgICAgICAgICAgICAgIGlkOiBzdXJ2ZXkuaWQsCiAgICAgICAgICAgICAgICAgICAgY3VycDogc3VydmV5LmRhdGEoKS5jdXJwLAogICAgICAgICAgICAgICAgICAgIGVtYWlsOiBzdXJ2ZXkuZGF0YSgpLmVtYWlsLAogICAgICAgICAgICAgICAgICAgIGZlZGVyYWxFbnRpdHk6IHN1cnZleS5kYXRhKCkuZmVkZXJhbEVudGl0eSwKICAgICAgICAgICAgICAgICAgICBuYW1lOiBzdXJ2ZXkuZGF0YSgpLm5hbWUsCiAgICAgICAgICAgICAgICAgICAgcGhvbmU6IHN1cnZleS5kYXRhKCkucGhvbmUKICAgICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICAgIF90aGlzMi5zdXJ2ZXlzLnB1c2goc3Vydik7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZWRpdFN1cnZleTogZnVuY3Rpb24gZWRpdFN1cnZleShzdXJ2ZXlJZCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiL3N1cnZleS8iLmNvbmNhdChzdXJ2ZXlJZCkpOwogICAgfSwKICAgIGRlbGV0ZVN1cnZleTogZnVuY3Rpb24gZGVsZXRlU3VydmV5KHN1cnZleUlkKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHdpbmRvdy5Td2FsLmZpcmUoewogICAgICAgICAgICAgICAgICB0aXRsZTogIsK/RGVzZWEgZWxpbWluYXIgZXN0YSBlbmN1ZXN0YT8iLAogICAgICAgICAgICAgICAgICB0ZXh0OiAiTm8gc2UgcG9kcmFuIHJlY3VwZXJhciBsb3MgZGF0b3MgdW5hIHZleiBlbGltaW5hZG9zLiIsCiAgICAgICAgICAgICAgICAgIGljb246ICJ3YXJuaW5nIiwKICAgICAgICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogdHJ1ZSwKICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvbkNvbG9yOiAiIzMwODVkNiIsCiAgICAgICAgICAgICAgICAgIGNhbmNlbEJ1dHRvbkNvbG9yOiAiI2QzMyIsCiAgICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAiRWxpbWluYXIiLAogICAgICAgICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAiQ2FuY2VsYXIiCiAgICAgICAgICAgICAgICB9KS50aGVuKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMocmVzdWx0KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcmVzdWx0LmlzQ29uZmlybWVkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZURvYyhkb2Mod2luZG93LmRiLCAic3VydmV5cyIsIHN1cnZleUlkKSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczMuZ2V0U3VydmV5cygpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuU3dhbC5maXJlKCJFbGltaW5hZG8hIiwgIlJlZ2lzdHJvIGVsaW1pbmFkby4iLCAic3VjY2VzcyIpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIH0oKSk7CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AAEA;EACAA,IADA,kBACA;IACA;MACAC;IADA;EAGA,CALA;EAMAC,OANA,qBAMA;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACA,kBADA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAEA,CARA;EASAC;IACAC,UADA,wBACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACA,oBADA,CAGA;;gBAHA;gBAAA,OAIAC,yCAJA;;cAAA;gBAIAL,IAJA;gBAMAA;kBACA;oBACAM,aADA;oBAEAC,wBAFA;oBAGAC,0BAHA;oBAIAC,0CAJA;oBAKAC,wBALA;oBAMAC;kBANA;;kBASA;gBACA,CAXA;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAkBA,CAnBA;IAoBAC,UApBA,sBAoBAC,QApBA,EAoBA;MACA;IACA,CAtBA;IAuBAC,YAvBA,wBAuBAD,QAvBA,EAuBA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACAE;kBACAC,uCADA;kBAEAC,4DAFA;kBAGAC,eAHA;kBAIAC,sBAJA;kBAKAC,6BALA;kBAMAC,yBANA;kBAOAC,6BAPA;kBAQAC;gBARA,GASAC,IATA;kBAAA,sEASA;oBAAA;sBAAA;wBAAA;0BAAA;4BAAA,KACAC,kBADA;8BAAA;8BAAA;4BAAA;;4BAAA;4BAAA,OAGAC,8CAHA;;0BAAA;4BAAA;4BAAA,OAIA,mBAJA;;0BAAA;4BAMAX;;0BANA;0BAAA;4BAAA;wBAAA;sBAAA;oBAAA;kBAAA,CATA;;kBAAA;oBAAA;kBAAA;gBAAA;;cADA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAmBA;EA1CA;AATA","names":["data","surveys","mounted","methods","getSurveys","getDocs","id","curp","email","federalEntity","name","phone","editSurvey","surveyId","deleteSurvey","window","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","deleteDoc"],"sourceRoot":"src/views/admin","sources":["SurveysList.vue"],"sourcesContent":["<template>\n  <div class=\"survey-list\">\n    <h1>Encuestas realizadas</h1>\n    <h4 v-if=\"!surveys.length\">Aun no hay encuestas registradas...</h4>\n    <table v-if=\"surveys.length\">\n      <thead>\n        <th>Nombre</th>\n        <th>Email</th>\n        <th>Curp</th>\n        <th>Ent. Federal</th>\n        <th>Telefono</th>\n        <th>Opciones</th>\n      </thead>\n      <tbody>\n        <tr v-for=\"(survey, index) in surveys\" :key=\"index\">\n          <td>{{ survey.name }}</td>\n          <td>{{ survey.email }}</td>\n          <td>{{ survey.curp }}</td>\n          <td>{{ survey.federalEntity }}</td>\n          <td>{{ survey.phone }}</td>\n          <td>\n            <a class=\"btn-link bg-pm\" href=\"#\" @click.prevent=\"editSurvey(survey.id)\">Editar</a> |\n            <a class=\"btn-link bg-dg\" href=\"#\" @click.prevent=\"deleteSurvey(survey.id)\">Eliminar</a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport { collection, doc, getDocs, deleteDoc } from \"firebase/firestore\";\n\nexport default {\n  data() {\n    return {\n      surveys: [],\n    };\n  },\n  async mounted() {\n    await this.getSurveys();\n  },\n  methods: {\n    async getSurveys() {\n      this.surveys = [];\n\n      //* Read data to firebase\n      const data = await getDocs(collection(window.db, \"surveys\"));\n\n      data.forEach((survey) => {\n        let surv = {\n          id: survey.id,\n          curp: survey.data().curp,\n          email: survey.data().email,\n          federalEntity: survey.data().federalEntity,\n          name: survey.data().name,\n          phone: survey.data().phone,\n        };\n\n        this.surveys.push(surv);\n      });\n    },\n    editSurvey(surveyId) {\n      this.$router.push(`/survey/${surveyId}`);\n    },\n    async deleteSurvey(surveyId) {\n      window.Swal.fire({\n        title: \"¿Desea eliminar esta encuesta?\",\n        text: \"No se podran recuperar los datos una vez eliminados.\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Eliminar\",\n        cancelButtonText: \"Cancelar\",\n      }).then(async (result) => {\n        if (result.isConfirmed) {\n          //* Delete data to firebase\n          await deleteDoc(doc(window.db, \"surveys\", surveyId));\n          await this.getSurveys();\n\n          window.Swal.fire(\"Eliminado!\", \"Registro eliminado.\", \"success\");\n        }\n      });\n    },\n  },\n};\n</script>\n"]}]}