{"remainingRequest":"/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/thread-loader/dist/cjs.js!/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/babel-loader/lib/index.js!/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/src/views/user/Survey.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/src/views/user/Survey.vue","mtime":1655265551217},{"path":"/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/babel.config.js","mtime":1654876133000},{"path":"/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/cache-loader/dist/cjs.js","mtime":1655263279431},{"path":"/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/thread-loader/dist/cjs.js","mtime":1655263279400},{"path":"/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/babel-loader/lib/index.js","mtime":1655263279743},{"path":"/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/cache-loader/dist/cjs.js","mtime":1655263279431},{"path":"/Users/ingjuliovasquez/Documents/Proyectos/encuestas_personales/node_modules/vue-loader/lib/index.js","mtime":1655263279849}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AAEA;EACAA,mBADA;EAEAC,IAFA,kBAEA;IACA;MACAC;QACAC,QADA;QAEAC,SAFA;QAGAC,QAHA;QAIAC,iBAJA;QAKAC;MALA;IADA;EASA,CAZA;EAaAC,OAbA,qBAaA;IACA;EACA,CAfA;EAgBAC;IACAC,SADA,uBACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA,sBADA;;cAAA;gBACAC,QADA;;gBAAA,KAGAA,QAHA;kBAAA;kBAAA;gBAAA;;gBAIAC,SAJA,GAIA;kBACAT,QADA;kBAEAC,SAFA;kBAGAC,QAHA;kBAIAC,iBAJA;kBAKAC;gBALA,CAJA;gBAAA;gBAAA;gBAAA,OAaAM,sDAbA;;cAAA;gBAAA;gBAAA,OAcA,mBAdA;;cAAA;gBAgBA;;gBAEA;;gBAEAC;gBApBA;gBAAA;;cAAA;gBAAA;gBAAA;gBAsBAC;;cAtBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAyBA,CA1BA;IA2BAC,UA3BA,wBA2BA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,kDADA;;cAAA;gBACAf,MADA;gBAEA;;cAFA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGA,CA9BA;IA+BAgB,YA/BA,0BA+BA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA,uBADA;;cAAA;gBACAP,QADA;;gBAAA,KAGAA,QAHA;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA;gBAAA,OAKAQ,UACAC,0CADA,EAEA,aAFA,CALA;;cAAA;gBAUA;;gBAEAN;gBAZA;gBAAA;;cAAA;gBAAA;gBAAA;gBAcAC;;cAdA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAiBA,CAhDA;IAiDAM,cAjDA,4BAiDA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA;kBACA;gBACA,CAFA,CADA;;cAAA;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAIA,CArDA;IAsDAC,WAtDA,yBAsDA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACA;gBACAC,QAFA,GAEA,cAFA,EAIA;;gBACAA;gBACAA;gBANA;gBAAA,OAQAC;kBAAAC;kBAAAC;gBAAA,EARA;;cAAA;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IASA;EA/DA;AAhBA","names":["props","data","survey","name","email","curp","federalEntity","phone","mounted","methods","addSurvey","validate","resetForm","addDoc","window","console","editSurvey","getDoc","updateSurvey","updateDoc","doc","validateFields","submitEmail","formData","fetch","method","body"],"sourceRoot":"src/views/user","sources":["Survey.vue"],"sourcesContent":["<template>\n  <div class=\"survey\">\n    <ValidationObserver ref=\"encuesta\">\n      <form\n        class=\"questions\"\n        @submit.prevent=\"surveyId ? updateSurvey() : addSurvey()\"\n      >\n        <h1>Encuestas Personales</h1>\n        <ValidationProvider\n          name=\"Nombre\"\n          rules=\"required|alpha_spaces\"\n          v-slot=\"{ errors }\"\n        >\n          <div class=\"field\">\n            <label for=\"\" class=\"required\"> Escribe tu nombre completo </label>\n            <input type=\"text\" v-model=\"survey.name\" />\n            <small class=\"text-danger\" v-if=\"errors.length\">\n              {{ errors[0] }}\n            </small>\n          </div>\n        </ValidationProvider>\n\n        <ValidationProvider\n          name=\"Email\"\n          rules=\"required|email\"\n          v-slot=\"{ errors }\"\n        >\n          <div class=\"field\">\n            <label for=\"\" class=\"required\"> Escribe tu correo </label>\n            <input type=\"email\" v-model=\"survey.email\" />\n            <small class=\"text-danger\" v-if=\"errors.length\">\n              {{ errors[0] }}\n            </small>\n          </div>\n        </ValidationProvider>\n\n        <ValidationProvider\n          name=\"Curp\"\n          rules=\"required|alpha_num\"\n          v-slot=\"{ errors }\"\n        >\n          <div class=\"field\">\n            <label for=\"\" class=\"required\">Escribe tu CURP</label>\n            <input type=\"text\" v-model=\"survey.curp\" />\n            <small class=\"text-danger\" v-if=\"errors.length\">\n              {{ errors[0] }}\n            </small>\n          </div>\n        </ValidationProvider>\n\n        <ValidationProvider\n          name=\"Entidad federativa\"\n          rules=\"required\"\n          v-slot=\"{ errors }\"\n        >\n          <div class=\"field\">\n            <label for=\"\" class=\"required\"\n              >Entidad federativa de Residencia</label\n            >\n            <select v-model=\"survey.federalEntity\">\n              <option value=\"Veracruz\" selected>\n                Veracruz\n              </option>\n                <option value=\"Nuevo León\" selected>\n                Nuevo León\n              </option>\n                <option value=\"Puebla\" selected>\n                Puebla\n              </option>\n            </select>\n            <small class=\"text-danger\" v-if=\"errors.length\">\n              {{ errors[0] }}\n            </small>\n          </div>\n        </ValidationProvider>\n\n        <ValidationProvider\n          name=\"Numero de contacto\"\n          rules=\"required|numeric|min:10|max:10\"\n          v-slot=\"{ errors }\"\n        >\n          <div class=\"field\">\n            <label for=\"\" class=\"required\">Numero de contacto</label>\n            <input type=\"text\" v-model=\"survey.phone\" />\n            <small class=\"text-danger\" v-if=\"errors.length\">\n              {{ errors[0] }}\n            </small>\n          </div>\n        </ValidationProvider>\n\n        <div v-if=\"!surveyId\">\n          <button class=\"btn-pm\">Registrar encuesta</button>\n        </div>\n        <div v-else>\n          <button class=\"btn-pm btn-udt\">Actualizar encuesta</button>\n          <router-link to=\"/surveys\" class=\"btn-dg btn-link\">\n            Cancelar\n          </router-link>\n        </div>\n      </form>\n    </ValidationObserver>\n  </div>\n</template>\n\n<script>\nimport { collection, getDoc, addDoc, updateDoc, doc } from \"firebase/firestore\";\n\nexport default {\n  props: [\"surveyId\"],\n  data() {\n    return {\n      survey: {\n        name: \"\",\n        email: \"\",\n        curp: \"\",\n        federalEntity: \"\",\n        phone: \"\",\n      },\n    };\n  },\n  mounted() {\n    if (this.surveyId) this.editSurvey();\n  },\n  methods: {\n    async addSurvey() {\n      const validate = await this.validateFields();\n\n      if (validate) {\n        const resetForm = {\n          name: \"\",\n          email: \"\",\n          curp: \"\",\n          federalEntity: \"\",\n          phone: \"\",\n        };\n\n        try {\n          await addDoc(collection(window.db, \"surveys\"), this.survey);\n          await this.submitEmail();\n\n          this.survey = resetForm;\n\n          this.$refs.encuesta.reset();\n\n          window.Swal.fire(window.SwalStore);\n        } catch (e) {\n          console.error(\"Error adding document: \", e);\n        }\n      }\n    },\n    async editSurvey() {\n      const survey = await getDoc(doc(window.db, \"surveys\", this.surveyId));\n      this.survey = survey.data();\n    },\n    async updateSurvey() {\n      const validate = await this.validateFields();\n\n      if (validate) {\n        try {\n          await updateDoc(\n            doc(window.db, \"surveys\", this.surveyId),\n            this.survey\n          );\n\n          this.$router.push(\"/surveys\");\n\n          window.Swal.fire(window.SwalUpdate);\n        } catch (e) {\n          console.error(\"Error updating document: \", e);\n        }\n      }\n    },\n    async validateFields() {\n      return await this.$refs.encuesta.validate().then((success) => {\n        return success;\n      });\n    },\n    async submitEmail() {\n      // Make Form Data\n      let formData = new FormData();\n\n      // Set Form Data Values\n      formData.append(\"name\", this.survey.name);\n      formData.append(\"email\", this.survey.email);\n\n      return await fetch(\"php/form.php\", { method: \"POST\", body: formData });\n    },\n  },\n};\n</script>\n\n"]}]}